@page
@using CowboyCafe.Data;
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4">Welcome to Cowboy Cafe!!</h1>
    <p>We at Cowboy Cafe are proud to bring you authentic trail meals from the American West. Shake off the dust on your boots and sake your thirst with one of our old-fashioned hand-jerked sodas. Dip your Pan de Campo into a bowl of beans. Or conquer the the mighty Texas Triple Burger! You’ve had a hard ride - so take it easy with us.</p>
</div>

<h2>Menu:</h2>
<table class="menu-list" style="width:100%">
    <tr>
        <th>Entree</th>
        <th>Sides</th>
        <th>Drinks</th>
    </tr>
    <tr>
        <td>
            @foreach (IOrderItem item in Menu.Entrees())
            {
                <li class="entrees">
                    <div class="menu-item">
                        <div class="name">@item.ToString()</div>
                        <div class="prices">Price: @item.Price</div>
                        <div class="calories">Calories: @item.Calories</div>
                    </div>
                </li>
            }
        </td>
        <td>
            @foreach (IOrderItem item in Menu.Sides())
            {
                <li class="sides">
                    <div class="menu-item">
                        <div class="name">@item.ToString()</div>
                        <div class="prices">Price: @item.Price</div>
                        <div class="calories">Calories: @item.Calories</div>
                    </div>
                </li>
            }
        </td>
        <td>
            @foreach (IOrderItem item in Menu.Drinks())
            {
                <li class="drinks">
                    <div class="menu-item">
                        <div class="name">@item.ToString()</div>
                        <div class="prices">Price: @item.Price</div>
                        <div class="calories">Calories: @item.Calories</div>
                    </div>
                </li>
            }
        </td>
    </tr>
</table>
